name: Build DevBuddy Images

on:
  push:
    branches:
      - main
    paths:
      - 'images/**'
      - '.github/workflows/build-devbuddy.yml'

permissions:
  contents: read
  packages: write

jobs:
  validate-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yq and PyYAML
        run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          python3 -m pip install --upgrade pip
          pip install pyyaml

      - name: Validate all image configs
        run: |
          bash scripts/validate-image-configs.sh

  filter-changes:
    needs: validate-config
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect-changes.outputs.matrix }}
      has_changes: ${{ steps.detect-changes.outputs.has_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yq and PyYAML
        run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          python3 -m pip install --upgrade pip
          pip install pyyaml

      - name: Detect changed images
        id: detect-changes
        run: |
          bash scripts/detect-changes.sh ${{ github.event.before }} ${{ github.sha }}
          echo "::group::Changed Images"
          cat changed_images.json
          echo "::endgroup::"
          # Convert JSON array to GitHub Actions matrix format
          MATRIX=$(cat changed_images.json | jq -c '[.[] | {"name": .}]')
          HAS_CHANGES=false
          if [ "$(cat changed_images.json)" != "[]" ]; then
            HAS_CHANGES=true
          fi
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
          echo "has_changes=$HAS_CHANGES" >> $GITHUB_OUTPUT

      - name: Show matrix
        run: |
          echo "Matrix: ${{ steps.detect-changes.outputs.matrix }}"
          echo "Has changes: ${{ steps.detect-changes.outputs.has_changes }}"

  build-and-push:
    needs: filter-changes
    if: needs.filter-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.filter-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yq and PyYAML
        run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          python3 -m pip install --upgrade pip
          pip install pyyaml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyuncs Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUNCS_USERNAME }}
          password: ${{ secrets.ALIYUNCS_TOKEN }}

      - name: Prepare Dockerfile and config
        id: prepare
        run: |
          bash scripts/prepare-dockerfile.sh ${{ matrix.component.name }}

      - name: Build and push ${{ matrix.component.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.prepare.outputs.context }}
          file: ${{ steps.prepare.outputs.dockerfile_path }}
          push: true
          platforms: ${{ steps.prepare.outputs.platforms }}
          cache-from: type=gha,scope=${{ matrix.component.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.component.name }}
          tags: |
            registry.cn-hangzhou.aliyuncs.com/lacogito/${{ steps.prepare.outputs.tag }}:${{ steps.prepare.outputs.version }}
